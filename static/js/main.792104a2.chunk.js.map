{"version":3,"sources":["components/User.js","components/Repo.js","components/Profile.js","services/api.js","pages/Dashboard.js","pages/Repository.js","routes/index.js","App.js","index.js"],"names":["Profile","user","className","name","login","src","avatar_url","alt","followers","following","bio","email","Repo","repo","to","full_name","repos","User","map","key","api","axios","create","baseURL","Dashboard","useState","sort","setSort","setUser","setSelectedUser","setRepos","onChange","e","target","value","get","then","data","id","type","placeholder","required","starsSort","a","b","stargazers_count","length","Repository","params","useRouteMatch","setRepo","useEffect","repository","response","description","language","href","html_url","rel","Routes","path","exact","component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.792104a2.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Profile = ({ user }) => (\r\n  <div className=\"contentBox-info user\">\r\n    <h2 className=\"user-name\">{user.name}</h2>\r\n    <h4 className=\"user-username\">{user.login}</h4>\r\n    <img className=\"user-photo\" src={user.avatar_url} alt=\"Foto de perfil\" />\r\n    <p className=\"user-specs\">Seguidores <span>{user.followers}</span> Seguindo <span>{user.following}</span></p>\r\n    <h3 className=\"user-bio\">{user.bio}</h3>\r\n    <p className=\"user-mail\">{user.email}</p>\r\n  </div>\r\n)\r\n\r\nexport default Profile;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Repo = ({ repo }) => (\r\n  <Link to={`/repository/${repo.full_name}`}>\r\n    <div className=\"repo-card\">\r\n      <h3 className=\"repo-card__name\">{repo.name}</h3>\r\n    </div>\r\n  </Link>\r\n)\r\n\r\nexport default Repo;","import React from 'react';\r\nimport User from '../components/User';\r\nimport Repo from '../components/Repo';\r\n\r\nconst Profile = ({user, repos}) => {\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"column\">\r\n          <User user={ user } />\r\n        </div>\r\n        <div className=\"column _2\">\r\n          <div className=\"contentBox-info repo\">\r\n            {repos.map(repo => <Repo key={repo.name} repo={ repo }/>)}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\nexport default Profile;","import axios from 'axios';\r\n\r\nconst api = axios.create({\r\n   baseURL: 'https://api.github.com/'\r\n})\r\n\r\nexport default api;","import React, { useState } from 'react';\r\nimport Profile from '../components/Profile';\r\nimport api from '../services/api';\r\n\r\nconst Dashboard = () => {\r\n\r\n  const [sort, setSort] = useState('desc');\r\n  const [user, setUser] = useState([]);\r\n  const [selectedUser, setSelectedUser] = useState([]);\r\n  const [repos, setRepos] = useState([]);\r\n\r\n  const getUser = (e) => {\r\n    setSelectedUser(e.target.value);\r\n\r\n    api\r\n      .get(\r\n        `users/${e.target.value}`\r\n      )\r\n      .then(({ data }) => setUser(data));\r\n\r\n    api\r\n      .get(\r\n        `users/${e.target.value}/repos?sort=stars&direction=${sort}`\r\n      )\r\n      .then(({ data }) => setRepos(data));\r\n  }\r\n\r\n  const handleFilter = (e) => {\r\n    setSort(e.target.value);\r\n\r\n    if (e.target.value === 'asc') {\r\n      const starsSort = repos.sort((a, b) => a.stargazers_count - b.stargazers_count);\r\n      setRepos(starsSort);\r\n    }\r\n\r\n    else if (e.target.value === 'desc') {\r\n      const starsSort = repos.sort((a, b) => b.stargazers_count - a.stargazers_count);\r\n      setRepos(starsSort);\r\n    }\r\n\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header >\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"column\">\r\n              <div className=\"searchBox\">\r\n                <h1 className=\"searchBox-title\">RepoSearch</h1>\r\n                <h3 className=\"searchBox-subtitle\">Insira um username do GitHub e confira seus detalhes</h3>\r\n                <div className=\"row\">\r\n                  <div className=\"column _2\">\r\n                    <input onChange={getUser} id=\"search\" type=\"text\" className=\"searchBox-form\" placeholder=\"GitHub username\" required />\r\n                  </div>\r\n                  <div className=\"column\">\r\n                    <select onChange={handleFilter} id=\"selectRepo\" className=\"searchBox-repo\" required>\r\n                      <option value=\"\">Selecione a ordem dos repositórios</option>\r\n                      <option value=\"asc\">Ascendente</option>\r\n                      <option value=\"desc\">Decrescente</option>\r\n                    </select>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </header>\r\n      <main>\r\n        <div className=\"container\">\r\n          <div className=\"contentBox\">\r\n            {user.length !== 0 ? <Profile user={user} repos={repos} /> : null}\r\n          </div>\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;","import React, { useState, useEffect } from 'react';\r\nimport { useRouteMatch } from 'react-router-dom';\r\nimport { Link } from 'react-router-dom';\r\nimport api from '../services/api';\r\n\r\nconst Repository = () => {\r\n\r\n  const { params } = useRouteMatch();\r\n  const [repo, setRepo] = useState(null);\r\n\r\n  useEffect(() => {\r\n    api\r\n      .get(\r\n        `repos/${params.repository}`\r\n      )\r\n      .then((response) => {\r\n        setRepo(response.data);\r\n      });\r\n\r\n  }, [params.repository, setRepo]);\r\n\r\n  return (\r\n    <>\r\n      {repo && (\r\n        <div className=\"App\">\r\n          <header >\r\n            <div className=\"container\">\r\n              <div className=\"row\">\r\n                <div className=\"column\">\r\n                  <div className=\"repositoryBox\">\r\n                    <h2 className=\"repositoryBox-title\">{repo.full_name}</h2>\r\n                    <h3 className=\"repositoryBox-stars\">{repo.stargazers_count}</h3>\r\n                    <i></i>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </header>\r\n          <main>\r\n            <div className=\"container\">\r\n              <div className=\"infoBox\">\r\n                <h4 className=\"infoBox-name\">{repo.name}</h4>\r\n                <p className=\"infoBox-description\">{repo.description}</p>\r\n                <h5 className=\"infoBox-language\">Linguagem <span>{repo.language}</span></h5>\r\n                <div className=\"infoBox-actions\">\r\n                  <a className=\"btn btn-primary\" href={repo.html_url} target=\"_blank\" rel=\"noopener noreferrer\">Link do Repositório</a>\r\n                  <Link className=\"btn btn-secondary\" to=\"/\">Voltar</Link>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </main>\r\n        </div>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Repository;","import React from 'react';\r\nimport {Switch, Route} from 'react-router-dom';\r\nimport Dashboard from '../pages/Dashboard';\r\nimport Repository from '../pages/Repository';\r\n\r\nconst Routes = () => (\r\n    <Switch>\r\n      <Route path=\"/\" exact component={Dashboard}/>\r\n      <Route path=\"/repository/:repository+\" component={Repository}/>\r\n    </Switch>\r\n  );\r\n\r\nexport default Routes;","import React from 'react';\r\nimport Routes from './routes';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nconst App = () => {\r\n  return (\r\n  <>\r\n    <BrowserRouter>\r\n    <Routes />\r\n    </BrowserRouter>\r\n  </>\r\n  )\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './assets/styles/App.scss';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}